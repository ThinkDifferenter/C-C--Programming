#include<stdio.h>
#include<stdlib.h>
#define Max_Queue 100
typedef struct queue
{
	int date[Max_Queue];
	int ps;
	int pe;
} Queue;
int initqueue(Queue *p)
{
	p->ps=0;
	p->pe=0;
	return 0;
}
int storequeue(Queue *q,int e)
{
	if(q->pe+1>Max_Queue)
	{
		return -1;
	}
	q->date[q->pe]=e;
	q->pe++;
	return 0;
}
int readqueue(Queue *q)
{
	if(q->pe+1>Max_Queue)	
	{
		return -1;
	}
	else 
	{
		return q->date[q->ps++];
	}
}
void dispqueue(Queue *q)
{
	int s;
	
	s=q->ps;
	if(q->ps==q->pe)
	{
		printf("\n队列为空!\n");
	}
	else
	{
		printf("\n队列中的元素为:");
		while(s<q->pe)
		{
			printf(" %d<-",q->date[s++]);
		}
		printf("\n");
	}
}
int main()
{
	Queue q1;
	int n;
	char ch;
	
	initqueue(&q1);
	printf("一个空队列已经创建:可选择下面的菜单对队列进行操作:\n");
	do
	{
		printf("\n1-入队列\n");
		printf("2-出队列\n");
		printf("3-退出\n");
		printf("\n请选择功能(1-3):");
		scanf("%c",&ch);
		
		switch(ch)
		{
			case '1':
			{
				printf("\n输入进入队列的值:");
				scanf("%d",&n);
				storequeue(&q1,n);
				dispqueue(&q1);
				break;
			}
			case '2':
			{
				n=readqueue(&q1);
				printf("\n出队列的数为:%d\n\n",n);
				dispqueue(&q1);
				break;
			}
			case '3':  exit(1);
		}
	} while(ch!='\0');
	return 0;
}